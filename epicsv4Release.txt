EPICS Version 4 RELEASE PLAN
=============================

This document lists the items composing the release of 
EPICS V4 into the LCLS control system.

Greg White, Ernest Williams, Murali Shankar, Jingchen Zhou, Mike Zelazny.
19-Aug-2015


RELEASE of EPICS 4.4.0.
=======================
Release is composed of:
  EPICS V4.4.0 release binary (C++ source) (dev and prod)
  Matlab client support (dev and prod)
  Python client support (dev and prod)
  Java client support (dev and prod)

CHECKLIST
---------
X * Develop dev and prod release plan (changes to login env) - this document
X * EPICS V4.4.0 on dev and prod
       dev  prod
  C++   X     X
  Java  X     X
  pvaPy X     X
X * Develop release tests.
* Deploy: Add client config to production bash environment for appropriate users.
* Deploy: Add Matlab startup modifications dev and prod
* Deploy: Python pvaPy support on dev and prod
* Make post-release Tests. 
* Applications Programmers Guide
* Develop Matlab client example
* Develop python client example
* Develop Java client example and send to Mike for replacing AIDA with DS
  (SLAC specific c++ client probably wait for coming EPICS 4.5.0)

RELEASE 1.0 DETAILS
===================
File Change Summary. All and only these files (no _swe, _facet etc)
Prod:
  epics/setup/epicsSetup.bash      Dirs and paths
  epics/setup/envSet.bash          Environment - EPICS_PVA* additions

Dev:
  epics/setup/epicsSetup_dev.bash  Dirs and paths
  epics/setup/envSet_dev.bash      Environment - EPICS_PVA* additions

  
PROD Detailed release plan.
===========================
The following describes changes required to release EPICS V4 on development.
At the time of writing, the CPP and Java of V4.4.0 have been built,
see EPICS_PVCPP and EPICS_PVJAVA below.

EPICS V4 binary and java
------------------------
Add the following to epics/setup/epicsSetup.bash

(assuming EPICS_BASE and EPICS_HOST_ARCH are already defined)

EPICS_PVCPP=/usr/local/lcls/epics/base/base-cpp-R4-4-0
EPICS_PVJAVA=/usr/local/lcls/epics/base/base-java-R4-4-0

** The following are LOGICAL additions, actual edits will probably
include existence tests following the pattern in epicsSetup.bash **

# Paths. 
# Add both EPICS base and EPICS V4 libs and bins to PATHS
#
LD_LIBRARY_PATH=\
${EPICS_BASE}/lib/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/pvAccessCPP/lib/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/pvDataCPP/lib/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/pvCommonCPP/lib/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/normativeTypesCPP/lib/${EPICS_HOST_ARCH}:\
${LD_LIBRARY_PATH}

PATH=\
${EPICS_BASE}/bin/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/pvAccessCPP/bin/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/pvDataCPP/bin/${EPICS_HOST_ARCH}:\
${PATH}

# Exports
#
export EPICS_BASE 
export EPICS_HOST_ARCH
export EPICS_PVCPP EPICS_PVJAVA
export LD_LIBRARY_PATH PATH

Prod Matlab
-----------
* On prod, the Java EPICS V4 installation MUST have symlinks from the generic jar file
name to the specific version file name, eg  pvAccessJava.jar -> pvAccessJava-4.0.3.jar.

* ... then, Add the following to /usr/local/lcls/tools/matlab/toolbox/startup.m
%% EPICS (V4) 
global EPICSPATHROOT;
EPICSPATHROOT='/usr/local/lcls/epics/base/';           % EPICS V4.4
EPICSJAVAPATHROOT=fullfile(EPICSPATHROOT,'base-java-R4-4-0');
javaaddpath(fullfile(EPICSJAVAPATHROOT,'pvDataJava.jar'));
javaaddpath(fullfile(EPICSJAVAPATHROOT,'pvAccessJava.jar'));
javaaddpath(fullfile(EPICSJAVAPATHROOT,'easyPVAJava.jar'));
javaaddpath(fullfile(EPICSJAVAPATHROOT,'jca.jar'));
javaaddpath(fullfile(EPICSJAVAPATHROOT,'caj.jar'));

* Add the following to /usr/local/matlab/2012a/bin/glnx86/java.opts
-DEPICS_PVA_ADDR_LIST=mccas0.slac.stanford.edu
-DEPICS_PVA_BROADCAST_PORT=5056

Prod Python
-----------
PVAPY_PACKAGE_TOP=${EPICS_PVCPP}/pvaPy
export PATH=$PVAPY_PACKAGE_TOP/python/current/bin:$PATH
(TODO)

DEV release plan
=================
The following describes changes required to release EPICS V4 on development.
At the time of writing, the CPP and Java of V4.4.0 have been built,
see EPICS_PVCPP and EPICS_PVJAVA below.

Dev EPICS V4 binary and java
----------------------------
Add the following to epics/setup/epicsSetup_dev.bash

(assuming EPICS_BASE and EPICS_HOST_ARCH are already defined by epicsSetup_dev.bash) 

EPICS_PVCPP=/afs/slac/g/lcls/epics/base/base-cpp-R4-4-0
EPICS_PVJAVA=/afs/slac/g/lcls/epics/base/base-java-R4-4-0-pre1

** The following are LOGICAL additions, actual edits will probably
include existence tests following the pattern in epicsSetup.bash **

# Paths. 
# Add both EPICS base and EPICS V4 libs and bins to PATHS.
#
LD_LIBRARY_PATH=\
${EPICS_BASE}/lib/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/pvAccessCPP/lib/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/pvDataCPP/lib/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/pvCommonCPP/lib/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/normativeTypesCPP/lib/${EPICS_HOST_ARCH}:\
${LD_LIBRARY_PATH}

PATH=\
${EPICS_BASE}/bin/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/pvAccessCPP/bin/${EPICS_HOST_ARCH}:\
${EPICS_PVCPP}/pvDataCPP/bin/${EPICS_HOST_ARCH}:\
${PATH}

# Exports
#
export EPICS_BASE 
export EPICS_HOST_ARCH
export EPICS_PVCPP EPICS_PVJAVA
export LD_LIBRARY_PATH PATH


Dev Matlab
----------
The following would set up "dev" matlab - that is, Matlab on AFS, as "Prod-on-dev".
That is, access to production EPICS V4 PVs. For connection to development
EPICS V4 servers, a user would override EPICS_PVA_ADDR_LIST using a local
java.opts file in thier working directory).

(In discussion with John Bartelt the package owner).

Ideally would be:

* ... then, Add the following to /usr/local/lcls/tools/matlab/toolbox/startup.m
%% EPICS (V4) 
global EPICSPATHROOT;
EPICSPATHROOT='/afs/slac/g/lcls/epics/base/';           % EPICS V4.4
EPICSJAVAPATHROOT=fullfile(EPICSPATHROOT,'base-java-R4-4-0-pre1');
javaaddpath(fullfile(EPICSJAVAPATHROOT,'pvDataJava.jar'));
javaaddpath(fullfile(EPICSJAVAPATHROOT,'pvAccessJava.jar'));
javaaddpath(fullfile(EPICSJAVAPATHROOT,'easyPVAJava.jar'));
javaaddpath(fullfile(EPICSJAVAPATHROOT,'jca.jar'));
javaaddpath(fullfile(EPICSJAVAPATHROOT,'caj.jar'));

* Create /afs/slac/package/matlab/2012a/bin/glnx86/java.opts, with the following contents:
-DEPICS_PVA_ADDR_LIST=mccas0.slac.stanford.edu
-DEPICS_PVA_BROADCAST_PORT=5056


Dev Python
-----------
Add the following to epics/setup/epicsSetup_dev.bash
#=================================================================================================
# Setup Python Version 2.7.4: The default on RHEL5 32-bit OS
# ================================================================================================
PVAPY_PACKAGE_TOP=${EPICS_PVCPP}/pvaPy
export PATH=$PVAPY_PACKAGE_TOP/python/current/bin:$PATH
export LD_LIBRARY_PATH=${PVAPY_PACKAGE_TOP}/python/current/lib:${PVAPY_PACKAGE_TOP}/python/current/lib/python2.7/lib-dynload:$LD_LIBRARY_PATH

if test -z "$PYTHONPATH" ; then
    export PYTHONPATH=${PVAPY_PACKAGE_TOP}/lib/linux-x86
else
    export PYTHONPATH=${PVAPY_PACKAGE_TOP}/lib/linux-x86:$PYTHONPATH
fi

# Let's get the Boost library also referenced for python at run time
export LD_LIBRARY_PATH=$PVAPY_PACKAGE_TOP/boost/1.58.0/linux-x86/lib:$LD_LIBRARY_PATH
